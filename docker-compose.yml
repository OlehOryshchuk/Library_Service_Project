services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env

  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
          python manage.py migrate &&
          python manage.py loaddatautf8 --traceback fixture_db_tables_data.json &&
          python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/library_service_api
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A library_service worker -l INFO"
    depends_on:
      - web
      - rabbitmq
      - db
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./:/library_service_api

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
            celery -A library_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - web
      - rabbitmq
      - db
    restart: on-failure
    volumes:
      - ./:/library_service_api
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    command: "celery -A library_service flower --address=0.0.0.0"
    depends_on:
      - celery
    env_file:
      - .env
